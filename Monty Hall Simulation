#simulate 100 tries, contestant keeps/switches door, monty hall problem 
import random as random

trials = 100000

winsKeep = 0
lossesKeep = 0
winsSwitch = 0
lossesSwitch = 0

i=1
while (i < (trials+1)):

    notPrizeDoors = random.sample([1, 2, 3], 2)
    
    for n in range(1,4):
        if n not in notPrizeDoors:
            prizeDoor = n
    
    originalChoice = random.randint(1,3)
    
    # Reveal a false door
    
    if (originalChoice == prizeDoor):
        revealFalseDoor = random.choice(notPrizeDoors)
        
    if (originalChoice != prizeDoor):
        for n in range(1,4):
            if (n != prizeDoor) and (n !=originalChoice):
                revealFalseDoor = n
        
    updatedChoicesList = []
    
    for n in range(1,4):
        if (n != revealFalseDoor):
            updatedChoicesList.append(n)
    
    # Probability of contestant winning given that he keeps his original choice
    
    if (originalChoice == prizeDoor):
        winsKeep = winsKeep+1
        
    if (originalChoice != prizeDoor):
        lossesKeep = lossesKeep+1
    
    # Probability of contestant winning given that he switches
    
    for n in updatedChoicesList:
        if (n != originalChoice):
            newChoice = n
      
    if (newChoice == prizeDoor):
        winsSwitch = winsSwitch+1
        
    if (newChoice != prizeDoor):
        lossesSwitch = lossesSwitch+1 
    
    i=i+1
        
probabilityKeep = winsKeep/trials
probabilitySwitch = winsSwitch/trials
print("Probability of winning given that he keeps his original choice:", probabilityKeep)
print("Probability of winning given that he switches:", probabilitySwitch)
