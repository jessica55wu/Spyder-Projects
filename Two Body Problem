import scipy as sci
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import animation
import scipy.integrate

G=6.67408e-11 #N-m2/kg2
m_nd=1.989e+30 #kg #mass of the sun
r_nd=5.326e+12 #m #distance between stars in Alpha Centauri
v_nd=30000 #m/s #relative velocity of earth around the sun
t_nd=79.91*365*24*3600*0.51 #s #orbital period of Alpha Centauri

K1=G*t_nd*m_nd/(r_nd**2*v_nd)
K2=v_nd*t_nd/r_nd 

m1=1.1 
m2=0.907 
r1=[-0.5,0,0] 
r2=[0.5,0,0] 
r1=sci.array(r1,dtype="float64")
r2=sci.array(r2,dtype="float64")
v1=[0.01,0.01,0] 
v2=[-0.05,0,-0.1] 
v1=sci.array(v1,dtype="float64")
v2=sci.array(v2,dtype="float64")

def TwoBodyEquations(w,t,G,m1,m2):
    r1=w[0:3]
    r2=w[3:6]
    v1=w[6:9]
    v2=w[9:12]
    r=np.linalg.norm(r2-r1) 
    dv1dt=K1*m2*(r2-r1)/r**3
    dv2dt=K1*m1*(r1-r2)/r**3
    dr1dt=K2*v1
    dr2dt=K2*v2
    r_derivs=np.concatenate((dr1dt,dr2dt))
    derivs=np.concatenate((r_derivs,dv1dt,dv2dt))
    return derivs

init_params=np.array([r1,r2,v1,v2]) 
init_params=init_params.flatten() 
time=sci.linspace(0,8,500) 
'8 orbital periods and 500 points'

two_body_sol=sci.integrate.odeint(TwoBodyEquations,init_params,time,args=(G,m1,m2))

r1_sol=two_body_sol[:,:3]
r2_sol=two_body_sol[:,3:6]

fig=plt.figure(figsize=(15,15))

ax=fig.add_subplot(111,projection="3d")
ax.plot(r1_sol[:,0],r1_sol[:,1],r1_sol[:,2],color="darkblue")
ax.plot(r2_sol[:,0],r2_sol[:,1],r2_sol[:,2],color="tab:red")

ax.set_xlabel("x",fontsize=14)
ax.set_ylabel("y",fontsize=14)
ax.set_zlabel("z",fontsize=14)
ax.set_title("Visualizing Star Orbits - A Two-Body System\n",fontsize=14)
ax.legend(loc="upper left",fontsize=14)
